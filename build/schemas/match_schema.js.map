{"version":3,"sources":["../../src/schemas/match_schema.js"],"names":["MatchSchema","mongoose","Schema","collection","MatchModel","model"],"mappings":";;;;;;;AAAA;;;;AACA,IAAMA,WAAW,GAAG,IAAIC,qBAASC,MAAb,CAAoB;AACpC,UAAQ;AACJ,oBAAgB;AACZ,cAAQ;AADI,KADZ;AAIJ,eAAW;AACP,cAAQ;AADD,KAJP;AAOJ,gBAAY;AACR,cAAQ;AADA;AAPR,GAD4B;AAYpC,UAAQ;AACJ,YAAQ;AACJ,cAAQ;AADJ,KADJ;AAIJ,mBAAe;AACX,cAAQ;AADG,KAJX;AAOJ,aAAS;AACL,cAAQ,CACJ,QADI;AADH,KAPL;AAYJ,cAAU;AACN,cAAQ;AADF,KAZN;AAeJ,kBAAc;AACV,cAAQ;AADE,KAfV;AAkBJ,eAAW;AACP,YAAM;AACF,gBAAQ;AACJ,kBAAQ;AADJ;AADN,OADC;AAMP,gBAAU;AACN,gBAAQ;AADF;AANH,KAlBP;AA4BJ,aAAS;AACL,cAAQ;AADH,KA5BL;AA+BJ,uBAAmB;AACf,cAAQ,CACJ,QADI;AADO,KA/Bf;AAoCJ,aAAS;AACL,cAAQ,CACJ,QADI;AADH,KApCL;AAyCJ,YAAQ;AACJ,kBAAY;AACR,gBAAQ;AADA,OADR;AAIJ,gBAAU;AACN,gBAAQ;AADF;AAJN,KAzCJ;AAiDJ,eAAW;AACP,cAAQ,CACJ,QADI;AADD,KAjDP;AAsDJ,aAAS;AACL,cAAQ;AADH;AAtDL,GAZ4B;AAsEpC,aAAW;AACP,YAAQ,CACJ,OADI;AADD;AAtEyB,CAApB,EA4EhB;AAAEC,EAAAA,UAAU,EAAE;AAAd,CA5EgB,CAApB;;AA+EA,IAAMC,UAAU,GAAGH,qBAASI,KAAT,CAAe,OAAf,EAAwBL,WAAxB,CAAnB;;eACeI,U","sourcesContent":["import mongoose from 'mongoose'\nconst MatchSchema = new mongoose.Schema({\n    \"meta\": {\n        \"data_version\": {\n            \"type\": \"Number\"\n        },\n        \"created\": {\n            \"type\": \"Date\"\n        },\n        \"revision\": {\n            \"type\": \"Number\"\n        }\n    },\n    \"info\": {\n        \"city\": {\n            \"type\": \"String\"\n        },\n        \"competition\": {\n            \"type\": \"String\"\n        },\n        \"dates\": {\n            \"type\": [\n                \"String\"\n            ]\n        },\n        \"gender\": {\n            \"type\": \"String\"\n        },\n        \"match_type\": {\n            \"type\": \"String\"\n        },\n        \"outcome\": {\n            \"by\": {\n                \"runs\": {\n                    \"type\": \"Number\"\n                }\n            },\n            \"winner\": {\n                \"type\": \"String\"\n            }\n        },\n        \"overs\": {\n            \"type\": \"Number\"\n        },\n        \"player_of_match\": {\n            \"type\": [\n                \"String\"\n            ]\n        },\n        \"teams\": {\n            \"type\": [\n                \"String\"\n            ]\n        },\n        \"toss\": {\n            \"decision\": {\n                \"type\": \"String\"\n            },\n            \"winner\": {\n                \"type\": \"String\"\n            }\n        },\n        \"umpires\": {\n            \"type\": [\n                \"String\"\n            ]\n        },\n        \"venue\": {\n            \"type\": \"String\"\n        }\n    },\n    \"innings\": {\n        \"type\": [\n            \"Mixed\"\n        ]\n    },\n},\n    { collection: 'matches' }\n)\n\nconst MatchModel = mongoose.model('match', MatchSchema);\nexport default MatchModel;"],"file":"match_schema.js"}