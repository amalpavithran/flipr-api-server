{"version":3,"sources":["../src/server.js"],"names":["dotenv","require","config","express","cors","app","connection_string","process","env","DB_CONNECTION_STRING","mongoose","MatchModel","TeamsModel","User","UserPlayer","CreditModel","use","urlencoded","extended","json","req","res","next","header","connect","useNewUrlParser","useUnifiedTopology","useCreateIndex","useFindAndModify","e","console","log","db","connection","on","error","bind","once","post","data","body","status","send","length","findById","user","team","map","player","create","_id","doc","updateOne","get","skippedPages","parseInt","query","page","find","skip","limit","lean","results","final_response","result","info","teams","matchId","params","id","playerNames","players","push","playerName","credits","playerDet","o","playerCredit","innings","matches","player_list","match","team1","team2","ball","key","Object","keys","findIndex","element","exception","server","listen","PORT","host","address","port"],"mappings":"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","sourcesContent":["import \"core-js/stable\";\nimport \"regenerator-runtime/runtime\";\nconst dotenv = require('dotenv');\ndotenv.config();\nvar express = require(\"express\");\nvar cors = require(\"cors\")\nvar app = express();\n\nvar connection_string = process.env.DB_CONNECTION_STRING;\nconst mongoose = require('mongoose');\nconst { default: MatchModel } = require(\"./schemas/match_schema\");\nconst { default: TeamsModel } = require(\"./schemas/team_schema\");\nconst { default: User } = require(\"./schemas/user\");\nconst { UserPlayer } = require(\"./schemas/user_player\");\nconst { default: CreditModel } = require(\"./schemas/player_schema\");\n\napp.use(express.urlencoded({ extended: false }));\napp.use(express.json());\napp.use(cors())\napp.use(function (req, res, next) {\n    res.header(\"Access-Control-Allow-Origin\", \"*\");\n    res.header(\"Access-Control-Allow-Headers\", \"Origin, X-Requested-With, Content-Type, Accept\");\n    next();\n});\n\ntry {\n    mongoose.connect(connection_string, {\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n        useCreateIndex: true,\n        useFindAndModify: true\n    });\n} catch (e) {\n    console.log(e);\n}\n\nconst db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function () {\n    console.log(\"DB: connected\");\n});\n\n\napp.post(\"users/login\", function (req, res) {\n\n});\n\napp.post(\"users/signup\", function (req, res) {\n\n})\n\napp.post(\"/users/team/set\", async function (req, res) {\n    const data = req.body;\n    console.log(req.body);\n    if (!data[\"team\"]) {\n        res.status(400).send({ \"message\": \"Bad request\" });\n    }\n    if (data[\"team\"].length != 11) {\n        res.status(400).send({ \"message\": \"Number of players not 11\" });\n        return;\n    }\n    console.log(data[\"team\"]);\n    try {\n        var user = await User.findById(data[\"id\"]);\n        var team = data[\"team\"].map((player) => new UserPlayer(player));\n        if (user == null) {\n            var doc = await User.create({_id:data['id'],\"team\": team });\n            res.json(doc);\n        }else{\n            await user.updateOne({\"team\":team});\n            user = await User.findById(data[\"id\"]);\n            res.json(user);\n        }\n    } catch (error) {\n        console.log(error)\n        res.status(500).send({ \"message\": \"An error occurred\" });\n    }\n\n})\n\napp.get(\"/matches\", async function (req, res) {\n    const skippedPages = parseInt(req.query.page) ? parseInt(req.query.page) : 0 * 20;\n    try {\n        var results = await MatchModel.find({}, { \"info.teams\": 1 }, { skip: skippedPages, limit: 20 }).lean();\n        var final_response = results.map(function (result) {\n            return {\n                \"_id\": result._id,\n                \"team1\": result.info.teams[0],\n                \"team2\": result.info.teams[1]\n            }\n        });\n        res.json(results);\n    } catch (e) {\n        console.log(e);\n    }\n});\n\napp.get(\"/matches/:id/players\", async function (req, res) {\n    const matchId = req.params.id;\n    // console.log(matchId);\n    try {\n        var teams = await TeamsModel.findById(matchId).lean();\n        var playerNames = []\n        teams.players.map((player) => playerNames.push(player.playerName))\n        var credits = await CreditModel.find({\"playerName\" : {\"$in\" : playerNames}})\n        // console.log(playerNames);\n        // console.log(credits);\n        // console.log(teams.players)\n        teams.players.map((playerDet) => playerDet[\"playerCredit\"] = credits.find((o) => o.playerName === playerDet.playerName).playerCredit);\n        // console.log(teams)\n        res.json(teams);\n        \n    }catch(e){\n        console.log(e);\n    }\n})\n\napp.get(\"/matches/generateplayerlist\", async function (req, res) {\n    try {\n        var matches = await MatchModel.find({}, { \"info.teams\": 1, innings: 1 }).lean();\n        // var credits = await MatchModel.find()\n        console.log(matches.length)\n        var player_list = matches.map(function (match) {\n            var players = [];\n            var team1 = match.innings[0][\"1st innings\"][\"team\"];\n            var team2 = match.innings[1][\"2nd innings\"][\"team\"];\n            // console.log(match.innings[0][\"1st innings\"][\"deliveries\"]);\n            match.innings[0][\"1st innings\"][\"deliveries\"].map(function (ball) {\n                var key = Object.keys(ball)[0];\n                // console.log(ball);\n                if (players.findIndex((element) => element.playerName == ball[key][\"batsman\"]) == -1) {\n                    players.push({ \"playerName\": ball[key][\"batsman\"], \"playerTeam\": team1 });\n                }\n                if (players.findIndex((element) => element.playerName == ball[key][\"bowler\"]) == -1) {\n                    players.push({ \"playerName\": ball[key][\"bowler\"], \"playerTeam\": team2 });\n                }\n                if (players.findIndex((element) => element.playerName == ball[key][\"non_striker\"]) == -1) {\n                    players.push({ \"playerName\": ball[key][\"non_striker\"], \"playerTeam\": team1 });\n                }\n            });\n            match.innings[1][\"2nd innings\"][\"deliveries\"].map(function (ball) {\n                var key = Object.keys(ball)[0];\n                if (players.findIndex((element) => element.playerName == ball[key][\"batsman\"]) == -1) {\n                    players.push({ \"playerName\": ball[key][\"batsman\"], \"playerTeam\": team2 });\n                }\n                if (players.findIndex((element) => element.playerName == ball[key][\"bowler\"]) == -1) {\n                    players.push({ \"playerName\": ball[key][\"bowler\"], \"playerTeam\": team1 });\n                }\n                if (players.findIndex((element) => element.playerName == ball[key][\"non_striker\"]) == -1) {\n                    players.push({ \"playerName\": ball[key][\"non_striker\"], \"playerTeam\": team2 });\n                }\n            });\n            return { \"_id\": match._id, \"players\": players };\n        });\n        res.json(player_list);\n\n    } catch (e) {\n        console.log(e);\n    }\n})\n\napp.get(\"/\", function (req, res) {\n    res.send(\"Working\");\n});\n\nprocess.on('uncaughtException', function (exception) {\n    console.log(exception);\n});\nvar server = app.listen(process.env.PORT, function () {\n    var host = server.address().address;\n    var port = server.address().port;\n    console.log(\"App listening at http://%s:%s\", host, port);\n});\n"],"file":"server.js"}